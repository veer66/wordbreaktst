# WordBreak TST - A pure Python ternary search tree library
# Copyright (c) 2007 Vee Satayamas
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# DEALINGS IN THE SOFTWARE.

import sys
import re
import cPickle as pickle
from wordbreaktst import Tst

def usage():
    print "Usage: " + sys.argv[0] + " <wordlist> <tst filename>"

def main():
    if len(sys.argv) != 3:
        usage()
        sys.exit(1)
        
    wordlist_filename = sys.argv[1]
    tst_filename = sys.argv[2]
    tst = Tst()
    
    word_list = open(wordlist_filename, "r").readlines()
    word_list = [re.split("[\r\n]+", w)[0] for w in word_list] 
    word_list = [unicode(w, "UTF-8") for w in word_list if w != '']
    word_list.sort()
    a = [(w, 1) for w in word_list]
    tst.insert_sorted_array(a)

    fo = open(tst_filename, "w")
    pickle.dump(tst, fo)
    fo.close()
    
if __name__ == '__main__':
    main()
